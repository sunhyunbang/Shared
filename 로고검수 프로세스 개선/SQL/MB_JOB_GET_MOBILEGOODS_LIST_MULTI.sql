
/*************************************************************************************
 *  단위 업무 명 : 구인구직 조건검색 유료상품 리스트
 *  작   성   자 : 신 장 순 (jssin@mediawill.com)
 *  작   성   일 : 2017/05/27
 *  수   정   자 : 김선호
 *  수   정   일 : 2021/02/16
 *  수 정  내 용 : 공고의 노출지역 총 갯수 업데이트(AREA_COUNT)
 *  수   정   자 : 방 순 현        
 *  수   정   일 : 2021/10/12 
 *  수 정 내  용 : 로고검수 프로세스 개선
 *  설        명 :
 *  주 의  사 항 :
 *  사 용  소 스 :
 *  사 용  예 제 :
 set statistics profile off 
 set statistics profile on
exec [dbo].[MB_JOB_GET_GOODS_LIST_MULTI] @GOODS_POSITION='SUB_LIST',@GOODS_POSITION_IDX=1,@AREA='11',@CATE='',@DAY_WEEK=1,@DAY_WEEK_NEGO=1,@TIME=0,@TIME_FROM=0,@TIME_TO=0,@TIME_NEGO=0,@AGE=0,@AGE_N=0,@SEX=0,@SEX_N=0,@IPADDR='183.102.220.105_android_web',@CUID=NULL
go
exec [dbo].[MB_JOB_GET_MOBILEGOODS_LIST_MULTI] @GOODS_POSITION='SUB_LIST',@GOODS_POSITION_IDX=1,@AREA='11',@CATE='',@DAY_WEEK=1,@DAY_WEEK_NEGO=1,@TIME=0,@TIME_FROM=0,@TIME_TO=0,@TIME_NEGO=0,@AGE=0,@AGE_N=0,@SEX=0,@SEX_N=0,@IPADDR='183.102.220.105_android_web',@CUID=NULL


exec [dbo].[MB_JOB_GET_GOODS_LIST_MULTI] @GOODS_POSITION='SUB_LIST',@GOODS_POSITION_IDX=1,@AREA='1209,1212',@CATE='40406,40411',@DAY_WEEK=1,@DAY_WEEK_NEGO=1,@TIME=0,@TIME_FROM=0,@TIME_TO=0,@TIME_NEGO=0,@AGE=0,@AGE_N=0,@SEX=2,@SEX_N=0,@IPADDR='39.7.56.82_android_web',@CUID=NULL
go
exec [dbo].[MB_JOB_GET_MOBILEGOODS_LIST_MULTI] @GOODS_POSITION='SUB_LIST',@GOODS_POSITION_IDX=1,@AREA='1209,1212',@CATE='40406,40411',@DAY_WEEK=1,@DAY_WEEK_NEGO=1,@TIME=0,@TIME_FROM=0,@TIME_TO=0,@TIME_NEGO=0,@AGE=0,@AGE_N=0,@SEX=2,@SEX_N=0,@IPADDR='39.7.56.82_android_web',@CUID=NULL


exec [dbo].[MB_JOB_GET_GOODS_LIST_MULTI] @GOODS_POSITION='SUB_LIST',@GOODS_POSITION_IDX=1,@AREA='12120002,12120016,12120019,12120020,12120021',@CATE='401,402,404,405,407',@DAY_WEEK=0,@DAY_WEEK_NEGO=0,@TIME=0,@TIME_FROM=0,@TIME_TO=0,@TIME_NEGO=0,@AGE=0,@AGE_N=0,@SEX=2,@SEX_N=1,@IPADDR='39.7.28.104_android_app',@CUID=NULL
go
exec [dbo].[MB_JOB_GET_MOBILEGOODS_LIST_MULTI] @GOODS_POSITION='SUB_LIST',@GOODS_POSITION_IDX=1,@AREA='12120002,12120016,12120019,12120020,12120021',@CATE='401,402,404,405,407',@DAY_WEEK=0,@DAY_WEEK_NEGO=0,@TIME=0,@TIME_FROM=0,@TIME_TO=0,@TIME_NEGO=0,@AGE=0,@AGE_N=0,@SEX=2,@SEX_N=1,@IPADDR='39.7.28.104_android_app',@CUID=NULL


exec [dbo].[MB_JOB_GET_GOODS_LIST_MULTI] @GOODS_POSITION='SUB_LIST',@GOODS_POSITION_IDX=1,@AREA='1406,1413',@CATE='401',@DAY_WEEK=0,@DAY_WEEK_NEGO=0,@TIME=0,@TIME_FROM=0,@TIME_TO=0,@TIME_NEGO=0,@AGE=41,@AGE_N=1,@SEX=0,@SEX_N=0,@IPADDR='223.62.213.139_android_web',@CUID=NULL
go
exec [dbo].MB_JOB_GET_MOBILEGOODS_LIST_MULTI @GOODS_POSITION='SUB_LIST',@GOODS_POSITION_IDX=1,@AREA='1406,1413',@CATE='401',@DAY_WEEK=0,@DAY_WEEK_NEGO=0,@TIME=0,@TIME_FROM=0,@TIME_TO=0,@TIME_NEGO=0,@AGE=41,@AGE_N=1,@SEX=0,@SEX_N=0,@IPADDR='223.62.213.139_android_web',@CUID=NULL

MOBILE_JOB_GOOD_TB

select count(*) FROM PP_LINE_AD_AREA_MOBILEGOOD_1DAY_TB
select COUNT(*) FROM PP_LINE_AD_FINDCODE_MOBILEGOOD_1DAY_TB

*************************************************************************************/
ALTER PROC [dbo].[MB_JOB_GET_MOBILEGOODS_LIST_MULTI]
  @GOODS_POSITION VARCHAR(20) = ''  /* 유료상품 노출위치 */
, @GOODS_POSITION_IDX TINYINT = 1   /* 유료상품 노출위치 인덱스(1:상단, 2:중앙, 3:하단) */
, @AREA VARCHAR(100) = ''       /* 지역코드 */
, @CATE VARCHAR(100) = ''       /* 업/직종코드 */
, @DAY_WEEK TINYINT = 0        /* 근무일 검색 (0:근무일 전체, 1:주4~6일, 2:주1~3일, 3:주말) */
, @DAY_WEEK_NEGO TINYINT = 0     /* 근무일 협의 (1:협의) */
, @TIME TINYINT = 0          /* 근무시간(0:근무시간 전체, 1:장시간근무(4시간초과), 2:단시간근무(4시간미만), 3:직접지정 */
, @TIME_FROM INT = 0         /* 근무시간 3:직접지정 - 시작시간 */
, @TIME_TO INT = 0          /* 근무시간 3:직접지정 - 종료시간 */
, @TIME_NEGO TINYINT = 0       /* 근무시간 협의 (1:협의) */
, @AGE INT = 0            /* 연령(직접입력) */
, @AGE_N TINYINT = 0         /* 연령무관(1:무관) */
, @SEX TINYINT = 0          /* 성별(0:전체, 1:남자, 2:여자) */
, @SEX_N TINYINT = 0         /* 성별무관(1:무관) */
, @IPADDR VARCHAR(20) = NULL
, @CUID INT = NULL
AS
BEGIN 

 SET NOCOUNT ON;
 SET TRANSACTION ISOLATION LEVEL READ UNCOMMITTED
--  select 1 where 1=2 
-- return 

 DECLARE @SQL NVARCHAR(MAX) = ''
 DECLARE @SQL_TEMP NVARCHAR(MAX) = ''
 DECLARE @SQL_JOIN NVARCHAR(MAX) = ''
 DECLARE @SQL_WHERE NVARCHAR(MAX) = ''
 DECLARE @SQL_PARAM NVARCHAR(MAX) = ''

 /* 근무조건 추가 */
 DECLARE @SQL_WORK_CONDITION_ADD_JOIN NVARCHAR(2000) = ''
 DECLARE @SQL_WORK_CONDITION_ADD_WHERE NVARCHAR(4000) = ''

 DECLARE @SQL_JOIN_AREA NVARCHAR(2000) = ''
 
 -- 다중 지역 검색시 사용
 DECLARE @AREA_COUNT INT = 0
 DECLARE @IDX_AREA_A_CODE_1 TINYINT, @IDX_AREA_B_CODE_1 SMALLINT, @IDX_AREA_C_CODE_1 INT
 DECLARE @IDX_AREA_A_CODE_2 TINYINT, @IDX_AREA_B_CODE_2 SMALLINT, @IDX_AREA_C_CODE_2 INT
 DECLARE @IDX_AREA_A_CODE_3 TINYINT, @IDX_AREA_B_CODE_3 SMALLINT, @IDX_AREA_C_CODE_3 INT
 DECLARE @IDX_AREA_A_CODE_4 TINYINT, @IDX_AREA_B_CODE_4 SMALLINT, @IDX_AREA_C_CODE_4 INT
 DECLARE @IDX_AREA_A_CODE_5 TINYINT, @IDX_AREA_B_CODE_5 SMALLINT, @IDX_AREA_C_CODE_5 INT

 -- 다중 업/직종 검색시 사용
 DECLARE @CATE_COUNT INT = 0
 DECLARE @FINDCODE_S INT, @FINDCODE_E INT
 DECLARE @IDX_CODE2_1 INT, @IDX_CODE3_1 INT, @IDX_CODE4_1 INT
 DECLARE @IDX_CODE2_2 INT, @IDX_CODE3_2 INT, @IDX_CODE4_2 INT
 DECLARE @IDX_CODE2_3 INT, @IDX_CODE3_3 INT, @IDX_CODE4_3 INT
 DECLARE @IDX_CODE2_4 INT, @IDX_CODE3_4 INT, @IDX_CODE4_4 INT
 DECLARE @IDX_CODE2_5 INT, @IDX_CODE3_5 INT, @IDX_CODE4_5 INT
 DECLARE @DBA_START_TIME  datetime = getdate()
 DECLARE @DBA_END_TIME INT   
 
 /* 상품검색 */
 IF @GOODS_POSITION = 'SUB_LIST' BEGIN
  SET @SQL_WHERE += ' AND (A.GOODS_SUB_LIST_POSITION = @GOODS_POSITION_IDX OR A.GOODS_MAIN_POSITION = @GOODS_POSITION_IDX) '
 END

 /* 지역검색 */
 IF @AREA <> '' BEGIN

  --// 다중인지여부 체크 및 다중처리를 위한 테이블 변수
  DECLARE @AREA_TMP_TABLE TABLE (IDX INT, VALUE INT)
  INSERT INTO @AREA_TMP_TABLE
  SELECT * FROM DBO.FN_SPLIT_TO_TB(@AREA, ',')
   
  SET @AREA_COUNT = (SELECT COUNT(*) FROM @AREA_TMP_TABLE)

  IF @AREA_COUNT = 1 BEGIN
   --// 단일검색

   SET @SQL_WHERE += ' AND EXISTS(SELECT LINEADID, INPUT_BRANCH, LAYOUT_BRANCH FROM PP_LINE_AD_AREA_MOBILEGOOD_1DAY_TB AS AA WITH(NOLOCK) WHERE 1=1 '

   IF LEN(@AREA) = 2 BEGIN
    --시/도
    SET @SQL_WHERE += ' AND AA.AREA_A_CODE = @AREA '
   END
   ELSE IF LEN(@AREA) = 4 BEGIN
    --시/군/구
    SET @SQL_WHERE += ' AND AA.AREA_B_CODE = @AREA '
   END
   ELSE IF LEN(@AREA) = 8 BEGIN
    --동/읍/면
    SET @SQL_WHERE += ' AND AA.AREA_C_GROUP = @AREA '
   END

   SET @SQL_WHERE += ' AND AA.LINEADID = A.LINEADID AND AA.INPUT_BRANCH = A.INPUT_BRANCH AND AA.LAYOUT_BRANCH = A.LAYOUT_BRANCH ) '
  END
  ELSE BEGIN
   --// 다중검색
   
   DECLARE @SQL_AREA_UNION NVARCHAR(1000) = ''
   DECLARE @TMP_AREA_CODE INT
   DECLARE @I_AREA INT = 0
   --//UNION ALL 으로 묶는다
   WHILE @I_AREA < @AREA_COUNT BEGIN
    
    SELECT @TMP_AREA_CODE = VALUE
    FROM @AREA_TMP_TABLE
    WHERE IDX = @I_AREA

    IF LEN(@TMP_AREA_CODE) = 2 BEGIN
     --파라메터변수 처리
     IF @I_AREA = 0 BEGIN
      SET @IDX_AREA_A_CODE_1 = @TMP_AREA_CODE
     END
     ELSE IF @I_AREA = 1 BEGIN
      SET @IDX_AREA_A_CODE_2 = @TMP_AREA_CODE
     END
     ELSE IF @I_AREA = 2 BEGIN
      SET @IDX_AREA_A_CODE_3 = @TMP_AREA_CODE
     END
     ELSE IF @I_AREA = 3 BEGIN
      SET @IDX_AREA_A_CODE_4 = @TMP_AREA_CODE
     END
     ELSE IF @I_AREA = 4 BEGIN
      SET @IDX_AREA_A_CODE_5 = @TMP_AREA_CODE
     END
     
    END
    ELSE IF LEN(@TMP_AREA_CODE) = 4 BEGIN
     --파라메터변수 처리
     IF @I_AREA = 0 BEGIN
      SET @IDX_AREA_B_CODE_1 = @TMP_AREA_CODE
     END
     ELSE IF @I_AREA = 1 BEGIN
      SET @IDX_AREA_B_CODE_2 = @TMP_AREA_CODE
     END
     ELSE IF @I_AREA = 2 BEGIN
      SET @IDX_AREA_B_CODE_3 = @TMP_AREA_CODE
     END
     ELSE IF @I_AREA = 3 BEGIN
      SET @IDX_AREA_B_CODE_4 = @TMP_AREA_CODE
     END
     ELSE IF @I_AREA = 4 BEGIN
      SET @IDX_AREA_B_CODE_5 = @TMP_AREA_CODE
     END

    END
    ELSE IF LEN(@TMP_AREA_CODE) = 8 BEGIN
     --파라메터변수 처리
     IF @I_AREA = 0 BEGIN
      SET @IDX_AREA_C_CODE_1 = @TMP_AREA_CODE
     END
     ELSE IF @I_AREA = 1 BEGIN
      SET @IDX_AREA_C_CODE_2 = @TMP_AREA_CODE
     END
     ELSE IF @I_AREA = 2 BEGIN
      SET @IDX_AREA_C_CODE_3 = @TMP_AREA_CODE
     END
     ELSE IF @I_AREA = 3 BEGIN
      SET @IDX_AREA_C_CODE_4 = @TMP_AREA_CODE
     END
     ELSE IF @I_AREA = 4 BEGIN
      SET @IDX_AREA_C_CODE_5 = @TMP_AREA_CODE
     END

    END   

    SET @I_AREA = @I_AREA + 1
   END

   --시/도
   IF @IDX_AREA_A_CODE_1 IS NOT NULL OR @IDX_AREA_A_CODE_2 IS NOT NULL OR @IDX_AREA_A_CODE_3 IS NOT NULL OR @IDX_AREA_A_CODE_4 IS NOT NULL OR @IDX_AREA_A_CODE_5 IS NOT NULL BEGIN
    SET @SQL_AREA_UNION += ' SELECT LINEADID, INPUT_BRANCH, LAYOUT_BRANCH FROM PP_LINE_AD_AREA_MOBILEGOOD_1DAY_TB WITH(NOLOCK) WHERE AREA_A_CODE IN (@IDX_AREA_A_CODE_1, @IDX_AREA_A_CODE_2, @IDX_AREA_A_CODE_3, @IDX_AREA_A_CODE_4, @IDX_AREA_A_CODE_5) '
   END
   --시/군/구
   IF @IDX_AREA_B_CODE_1 IS NOT NULL OR @IDX_AREA_B_CODE_2 IS NOT NULL OR @IDX_AREA_B_CODE_3 IS NOT NULL OR @IDX_AREA_B_CODE_4 IS NOT NULL OR @IDX_AREA_B_CODE_5 IS NOT NULL BEGIN
    IF @SQL_AREA_UNION <> '' BEGIN
     SET @SQL_AREA_UNION += ' UNION ALL '
    END
    SET @SQL_AREA_UNION += ' SELECT LINEADID, INPUT_BRANCH, LAYOUT_BRANCH FROM PP_LINE_AD_AREA_MOBILEGOOD_1DAY_TB WITH(NOLOCK) WHERE AREA_B_CODE IN (@IDX_AREA_B_CODE_1, @IDX_AREA_B_CODE_2, @IDX_AREA_B_CODE_3, @IDX_AREA_B_CODE_4, @IDX_AREA_B_CODE_5) '
   END
   --동/읍/면
   IF @IDX_AREA_C_CODE_1 IS NOT NULL OR @IDX_AREA_C_CODE_2 IS NOT NULL OR @IDX_AREA_C_CODE_3 IS NOT NULL OR @IDX_AREA_C_CODE_4 IS NOT NULL OR @IDX_AREA_C_CODE_5 IS NOT NULL BEGIN
    IF @SQL_AREA_UNION <> '' BEGIN
     SET @SQL_AREA_UNION += ' UNION ALL '
    END
    SET @SQL_AREA_UNION += ' SELECT LINEADID, INPUT_BRANCH, LAYOUT_BRANCH FROM PP_LINE_AD_AREA_MOBILEGOOD_1DAY_TB WITH(NOLOCK) WHERE AREA_C_GROUP IN (@IDX_AREA_C_CODE_1, @IDX_AREA_C_CODE_2, @IDX_AREA_C_CODE_3, @IDX_AREA_C_CODE_4, @IDX_AREA_C_CODE_5) '
   END

   SET @SQL_WHERE += ' AND EXISTS (SELECT LINEADID, INPUT_BRANCH, LAYOUT_BRANCH FROM (' + @SQL_AREA_UNION + ') AS TMP WHERE TMP.LINEADID = A.LINEADID AND TMP.INPUT_BRANCH = A.INPUT_BRANCH AND TMP.LAYOUT_BRANCH = A.LAYOUT_BRANCH) '
  END
 END

 /* 업/직종검색 */
 IF @CATE <> '' BEGIN
  --// 다중인지여부 체크 및 다중처리를 위한 테이블 변수
  DECLARE @CATE_TMP_TABLE TABLE (IDX INT, VALUE INT)
  INSERT INTO @CATE_TMP_TABLE
  SELECT * FROM DBO.FN_SPLIT_TO_TB(@CATE, ',')

  SET @CATE_COUNT = (SELECT COUNT(*) FROM @CATE_TMP_TABLE)
  
  IF @CATE_COUNT = 1 BEGIN
   --// 단일검색

   SET @SQL_WHERE += ' AND EXISTS(SELECT LINEADID, INPUT_BRANCH, LAYOUT_BRANCH FROM PP_LINE_AD_FINDCODE_MOBILEGOOD_1DAY_TB AF WITH(NOLOCK) JOIN PP_FINDCODE_TB F WITH(NOLOCK) ON F.CODE4 = AF.FINDCODE WHERE 1=1 '

   IF LEN(@CATE) = 3 BEGIN
    --대분류
    SET @SQL_WHERE += ' AND F.CODE2 = @CATE '
   END
   ELSE IF LEN(@CATE) = 5 BEGIN
    --중분류
    SET @SQL_WHERE += ' AND F.CODE3 = @CATE '
   END
   ELSE IF LEN(@CATE) = 7 BEGIN
    --소분류
    SET @SQL_WHERE += ' AND F.CODE4 = @CATE '
   END

   SET @SQL_WHERE += ' AND AF.LINEADID = A.LINEADID AND AF.INPUT_BRANCH = A.INPUT_BRANCH AND AF.LAYOUT_BRANCH = A.LAYOUT_BRANCH ) '
  END
  ELSE BEGIN
   --// 다중검색

   DECLARE @SQL_CATE_UNION NVARCHAR(1000) = ''
   DECLARE @TMP_CATE_CODE INT
   DECLARE @I_CATE INT = 0
   --//UNION ALL 으로 묶는다
   WHILE @I_CATE < @CATE_COUNT BEGIN
    
    SELECT @TMP_CATE_CODE = VALUE
    FROM @CATE_TMP_TABLE
    WHERE IDX = @I_CATE

    IF LEN(@TMP_CATE_CODE) = 3 BEGIN
     --파라메터변수 처리
     IF @I_CATE = 0 BEGIN
      SET @IDX_CODE2_1 = @TMP_CATE_CODE
     END
     ELSE IF @I_CATE = 1 BEGIN
      SET @IDX_CODE2_2 = @TMP_CATE_CODE
     END
     ELSE IF @I_CATE = 2 BEGIN
      SET @IDX_CODE2_3 = @TMP_CATE_CODE
     END
     ELSE IF @I_CATE = 3 BEGIN
      SET @IDX_CODE2_4 = @TMP_CATE_CODE
     END
     ELSE IF @I_CATE = 4 BEGIN
      SET @IDX_CODE2_5 = @TMP_CATE_CODE
     END

    END
    ELSE IF LEN(@TMP_CATE_CODE) = 5 BEGIN
     --파라메터변수 처리
     IF @I_CATE = 0 BEGIN
      SET @IDX_CODE3_1 = @TMP_CATE_CODE
     END
     ELSE IF @I_CATE = 1 BEGIN
      SET @IDX_CODE3_2 = @TMP_CATE_CODE
     END
     ELSE IF @I_CATE = 2 BEGIN
      SET @IDX_CODE3_3 = @TMP_CATE_CODE
     END
     ELSE IF @I_CATE = 3 BEGIN
      SET @IDX_CODE3_4 = @TMP_CATE_CODE
     END
     ELSE IF @I_CATE = 4 BEGIN
      SET @IDX_CODE3_5 = @TMP_CATE_CODE
     END

    END
    ELSE IF LEN(@TMP_CATE_CODE) = 7 BEGIN
     --파라메터변수 처리
     IF @I_CATE = 0 BEGIN
      SET @IDX_CODE4_1 = @TMP_CATE_CODE
     END
     ELSE IF @I_CATE = 1 BEGIN
      SET @IDX_CODE4_2 = @TMP_CATE_CODE
     END
     ELSE IF @I_CATE = 2 BEGIN
      SET @IDX_CODE4_3 = @TMP_CATE_CODE
     END
     ELSE IF @I_CATE = 3 BEGIN
      SET @IDX_CODE4_4 = @TMP_CATE_CODE
     END
     ELSE IF @I_CATE = 4 BEGIN
      SET @IDX_CODE4_5 = @TMP_CATE_CODE
     END

    END

    SET @I_CATE = @I_CATE + 1
   END

   --대분류
   IF @IDX_CODE2_1 IS NOT NULL OR @IDX_CODE2_2 IS NOT NULL OR @IDX_CODE2_3 IS NOT NULL OR @IDX_CODE2_4 IS NOT NULL OR @IDX_CODE2_5 IS NOT NULL BEGIN
    SET @SQL_CATE_UNION = ' SELECT LINEADID, INPUT_BRANCH, LAYOUT_BRANCH FROM PP_LINE_AD_FINDCODE_MOBILEGOOD_1DAY_TB AF WITH(NOLOCK) JOIN PP_FINDCODE_TB F WITH(NOLOCK) ON F.CODE4 = AF.FINDCODE WHERE F.CODE2 IN (@IDX_CODE2_1, @IDX_CODE2_2, @IDX_CODE2_3, @IDX_CODE2_4, @IDX_CODE2_5) '
   END
   --중분류
   IF @IDX_CODE3_1 IS NOT NULL OR @IDX_CODE3_2 IS NOT NULL OR @IDX_CODE3_3 IS NOT NULL OR @IDX_CODE3_4 IS NOT NULL OR @IDX_CODE3_5 IS NOT NULL BEGIN
    IF @SQL_CATE_UNION <> '' BEGIN
     SET @SQL_CATE_UNION += ' UNION ALL '
    END
    SET @SQL_CATE_UNION += ' SELECT LINEADID, INPUT_BRANCH, LAYOUT_BRANCH FROM PP_LINE_AD_FINDCODE_MOBILEGOOD_1DAY_TB AF WITH(NOLOCK) JOIN PP_FINDCODE_TB F WITH(NOLOCK) ON F.CODE4 = AF.FINDCODE WHERE F.CODE3 IN (@IDX_CODE3_1, @IDX_CODE3_2, @IDX_CODE3_3, @IDX_CODE3_4, @IDX_CODE3_5) '
   END
   --소분류
   IF @IDX_CODE4_1 IS NOT NULL OR @IDX_CODE4_2 IS NOT NULL OR @IDX_CODE4_3 IS NOT NULL OR @IDX_CODE4_4 IS NOT NULL OR @IDX_CODE4_5 IS NOT NULL BEGIN
    IF @SQL_CATE_UNION <> '' BEGIN
     SET @SQL_CATE_UNION += ' UNION ALL '
    END
    SET @SQL_CATE_UNION += ' SELECT LINEADID, INPUT_BRANCH, LAYOUT_BRANCH FROM PP_LINE_AD_FINDCODE_MOBILEGOOD_1DAY_TB AF WITH(NOLOCK) JOIN PP_FINDCODE_TB F WITH(NOLOCK) ON F.CODE4 = AF.FINDCODE WHERE F.CODE4 IN (@IDX_CODE4_1, @IDX_CODE4_2, @IDX_CODE4_3, @IDX_CODE4_4, @IDX_CODE4_5) '
   END

   SET @SQL_WHERE += ' AND EXISTS (SELECT LINEADID, INPUT_BRANCH, LAYOUT_BRANCH FROM (' + @SQL_CATE_UNION + ') AS TMP WHERE TMP.LINEADID = A.LINEADID AND TMP.INPUT_BRANCH = A.INPUT_BRANCH AND TMP.LAYOUT_BRANCH = A.LAYOUT_BRANCH) '
  END
 END

 /* ##근무조건## - 근무일 검색 (0:근무일 전체, 1:주4~6일, 2:주1~3일, 3:주말) */
 IF @DAY_WEEK = 1 OR @DAY_WEEK = 2 OR @DAY_WEEK = 3 BEGIN  
  IF @DAY_WEEK = 1 BEGIN
   SET @SQL_WORK_CONDITION_ADD_WHERE += ' AND DD.DAY_WEEK IN (1, 2, 4, 5, 6 ' 

   IF @DAY_WEEK_NEGO = 1 BEGIN
    --협의
    SET @SQL_WORK_CONDITION_ADD_WHERE += ' , 10 '
   END

   SET @SQL_WORK_CONDITION_ADD_WHERE += ' ) '
  END
  ELSE IF @DAY_WEEK = 2 BEGIN
   SET @SQL_WORK_CONDITION_ADD_WHERE += ' AND DD.DAY_WEEK IN (7, 8, 9 ' 

   IF @DAY_WEEK_NEGO = 1 BEGIN
    --협의
    SET @SQL_WORK_CONDITION_ADD_WHERE += ' , 10 '
   END

   SET @SQL_WORK_CONDITION_ADD_WHERE += ' ) '
  END
  ELSE IF @DAY_WEEK = 3 BEGIN
   SET @SQL_WORK_CONDITION_ADD_WHERE += ' AND DD.DAY_WEEK IN (3 ' 

   IF @DAY_WEEK_NEGO = 1 BEGIN
    --협의
    SET @SQL_WORK_CONDITION_ADD_WHERE += ' , 10 '
   END

   SET @SQL_WORK_CONDITION_ADD_WHERE += ' ) '
  END
 END

 /* ##근무조건## - 근무시간(0:근무시간 전체, 1:장시간근무(4시간초과), 2:단시간근무(4시간미만), 3:직접지정 */
 IF @TIME = 1 OR @TIME = 2 OR @TIME = 3 BEGIN

  --시간협의
  IF @TIME_NEGO = 1 BEGIN
   SET @SQL_WORK_CONDITION_ADD_WHERE += ' AND ('
  END
  ELSE BEGIN
   SET @SQL_WORK_CONDITION_ADD_WHERE += ' AND '
  END

  IF @TIME = 1 BEGIN
   SET @SQL_WORK_CONDITION_ADD_WHERE += ' CASE WHEN DD.WORKTIMEFROM > DD.WORKTIMETO THEN CASE WHEN (DD.WORKTIMETO + 2400) - DD.WORKTIMEFROM > 400 THEN 1 ELSE 0 END ELSE CASE WHEN DD.WORKTIMETO - DD.WORKTIMEFROM > 400 THEN 1 ELSE 0 END END = 1 '
  END
  ELSE IF @TIME = 2 BEGIN
   SET @SQL_WORK_CONDITION_ADD_WHERE += ' CASE WHEN DD.WORKTIMEFROM > DD.WORKTIMETO THEN CASE WHEN (DD.WORKTIMETO + 2400) - DD.WORKTIMEFROM <= 400 THEN 1 ELSE 0 END ELSE CASE WHEN DD.WORKTIMETO - DD.WORKTIMEFROM <= 400 THEN 1 ELSE 0 END END = 1 '
  END
  ELSE IF @TIME = 3 BEGIN 
   SET @SQL_WORK_CONDITION_ADD_WHERE += ' DD.WORKTIMEFROM >= @TIME_FROM AND DD.WORKTIMEFROM <= @TIME_TO '   
  END

  --시간협의
  IF @TIME_NEGO = 1 BEGIN
   SET @SQL_WORK_CONDITION_ADD_WHERE += ' OR DD.WORKTIMEF = 0 )'
  END
 END

 /* ##근무조건## - 연령(직접입력) */
 IF @AGE > 0 BEGIN
  SET @SQL_WORK_CONDITION_ADD_WHERE += ' AND ((CASE WHEN DD.AGEFROM = 0 THEN 1 ELSE DD.AGEFROM END <= @AGE AND CASE WHEN DD.AGETO = 0 THEN 80 ELSE DD.AGETO END >= @AGE) '

  --무관포함
  IF @AGE_N = 1 BEGIN
   SET @SQL_WORK_CONDITION_ADD_WHERE += ' OR DD.AGEF = 0) '
  END
  ELSE BEGIN
   SET @SQL_WORK_CONDITION_ADD_WHERE += ' AND DD.AGEF = 1) '
  END
 END

 /* ##근무조건## - 성별(0:전체, 1:남자, 2:여자) */
 IF @SEX = 1 OR @SEX = 2 BEGIN  
  IF @SEX_N = 1 BEGIN
   SET @SQL_WORK_CONDITION_ADD_WHERE += ' AND DD.SEXF IN (@SEX, 3) '
  END
  ELSE BEGIN
   SET @SQL_WORK_CONDITION_ADD_WHERE += ' AND DD.SEXF = @SEX '
  END
 END

 /*
 IF @SEX = 0 BEGIN
  IF @SEX_N = 0 BEGIN
   --전체일때 남자,여자 검색! 단, 무관포함이 아닐때.. (무관포함일 경우는 검색쿼리 던지는 의미 없음)
   SET @SQL_WORK_CONDITION_ADD_WHERE += ' AND DD.SEXF IN (1, 2) '
  END
 END
 ELSE IF @SEX = 1 OR @SEX = 2 BEGIN  
  IF @SEX_N = 1 BEGIN
   SET @SQL_WORK_CONDITION_ADD_WHERE += ' AND DD.SEXF IN (@SEX, 3) '
  END
  ELSE BEGIN
   SET @SQL_WORK_CONDITION_ADD_WHERE += ' AND DD.SEXF = @SEX '
  END
 END
 */

 /* ##근무조건## - 근무조건여부에 따른 JOIN 추가 */
 IF @SQL_WORK_CONDITION_ADD_WHERE <> '' BEGIN
  SET @SQL_WORK_CONDITION_ADD_JOIN += ' LEFT JOIN PP_LINE_AD_EXTEND_DETAIL_JOB_1DAY_TB AS DD WITH(NOLOCK) ON DD.LINEADID = A.LINEADID AND DD.INPUT_BRANCH = A.INPUT_BRANCH AND DD.LAYOUT_BRANCH = A.LAYOUT_BRANCH '
 END

 /* 임시테이블 */
 SET @SQL_TEMP = '
 SELECT A.LINEADID, A.INPUT_BRANCH, A.LAYOUT_BRANCH
 FROM MOBILE_JOB_GOOD_TB AS A WITH(NOLOCK)
 ' + @SQL_JOIN + @SQL_WORK_CONDITION_ADD_JOIN + ' 
 WHERE 10003=10003
 ' + @SQL_WHERE + @SQL_WORK_CONDITION_ADD_WHERE + '
 '

 SET @SQL = '
 SELECT 
    A.LINEADNO,A.LINEADID,A.INPUT_BRANCH,A.LAYOUT_BRANCH, A.AD_KIND, A.GROUP_CD, A.[VERSION]
   , A.FINDCODE
   , dbo.fn_DelSpecCharTitle(ISNULL(L.WAIT_TITLE , ISNULL(A.TITLE , L.MAIN_TITLE)) , A.[VERSION]) AS TITLE
   , '''' as CONTENTS
   , A.AREA_A, A.AREA_B, A.AREA_C
   , A.AREA_DONG
   , A.FIELD_2
   , dbo.fn_DelSpecCharTitle(ISNULL(L.WAIT_COMPANY , ISNULL(A.FIELD_6 , L.MAIN_COMPANY)) ,A.[VERSION]) AS FIELD_6
   , A.VNSUSEF, A.VNSNO, A.PHONE, A.PHONE_MOBILE
   , ISNULL(E.PHONEF, 0) AS PHONEF,E.MOBILE
   , ISNULL(E.PHONE1_VIEWF,0) as PHONE1_VIEWF,E.PHONE1,ISNULL(E.PHONE2_VIEWF,0) as PHONE2_VIEWF,E.PHONE2
   , A.GMAP_X, A.GMAP_Y
   , A.MOBILEF
   , A.PAYF, A.PAYFROM, A.PAYTO, A.AGE, A.SEXF
   , A.FINDCODENAME2 AS CODENM2, A.FINDCODENAME3 AS CODENM3, A.FINDCODENAME4 AS CODENM4
   , A.DETAILADCODE, A.ORDER_NAME
   , A.RECRUIT_END_DT
   , A.OPT_CODE
   , A.PAPER_OPT
   , A.MOBILE_OPT_CODE
   , DATEDIFF(DAY, A.RECRUIT_END_DT, GETDATE()) AS DDAY
   , E.REGULAREMPF
   , ISNULL(E.UPRIGHT_AGREE, 0) AS UPRIGHT_AGREE
   , ISNULL(E.PAY_POSSIBLE, 0) AS PAY_POSSIBLE
   , ISNULL(E.PAY_COMPANY_RULES, 0) AS PAY_COMPANY_RULES
   , ISNULL(E.PAY_COMPANY_RULES_ETC, '''') AS PAY_COMPANY_RULES_ETC
   , ISNULL(L.MAIN_TITLE, '''') AS MAIN_TITLE
   , ISNULL(L.MAIN_COMPANY, '''') AS MAIN_COMPANY
   , ISNULL(L.PUB_CONFIRM, ''0'') AS PUB_CONFIRM
   , ISNULL(L.WAIT_LOGO , DBO.FN_ISNULL(L.PUB_LOGO , L.MAIN_LOGO)) AS MAIN_LOGO
   , B.AREA_COUNT
 FROM (' + @SQL_TEMP + ') AS T
 INNER JOIN MOBILE_JOB_GOOD_TB AS A WITH(NOLOCK) ON A.LINEADID = T.LINEADID AND A.INPUT_BRANCH = T.INPUT_BRANCH AND A.LAYOUT_BRANCH = T.LAYOUT_BRANCH
 INNER JOIN PP_LINE_AD_AREA_1DAY_TB AS B WITH(NOLOCK) ON B.LINEADID = A.LINEADID AND B.INPUT_BRANCH = A.INPUT_BRANCH AND B.LAYOUT_BRANCH = A.LAYOUT_BRANCH AND B.[ORDER] = 1
 INNER JOIN PP_LINE_AD_EXTEND_DETAIL_JOB_1DAY_TB AS E WITH(NOLOCK) ON E.LINEADID = T.LINEADID AND E.INPUT_BRANCH = T.INPUT_BRANCH AND E.LAYOUT_BRANCH = T.LAYOUT_BRANCH
 LEFT OUTER JOIN PP_LOGO_OPTION_TB AS L WITH(NOLOCK) ON L.LINEADNO = A.LINEADNO
 --OPTION(MAXDOP 1) 
 '
 
  --PRINT @SQL

 /* 파라메터 설정 */
 SET @SQL_PARAM = '@GOODS_POSITION_IDX TINYINT, @AREA VARCHAR(100), @CATE VARCHAR(100), @TIME_FROM INT, @TIME_TO INT, @AGE INT, @SEX TINYINT, @IDX_AREA_A_CODE_1 TINYINT, @IDX_AREA_B_CODE_1 SMALLINT, @IDX_AREA_C_CODE_1 INT, @IDX_AREA_A_CODE_2 TINYINT, @IDX_AREA_B_CODE_2 SMALLINT, @IDX_AREA_C_CODE_2 INT, @IDX_AREA_A_CODE_3 TINYINT, @IDX_AREA_B_CODE_3 SMALLINT, @IDX_AREA_C_CODE_3 INT, @IDX_AREA_A_CODE_4 TINYINT, @IDX_AREA_B_CODE_4 SMALLINT, @IDX_AREA_C_CODE_4 INT, @IDX_AREA_A_CODE_5 TINYINT, @IDX_AREA_B_CODE_5 SMALLINT, @IDX_AREA_C_CODE_5 INT, @FINDCODE_S INT, @FINDCODE_E INT, @IDX_CODE2_1 INT, @IDX_CODE3_1 INT, @IDX_CODE4_1 INT, @IDX_CODE2_2 INT, @IDX_CODE3_2 INT, @IDX_CODE4_2 INT, @IDX_CODE2_3 INT, @IDX_CODE3_3 INT, @IDX_CODE4_3 INT, @IDX_CODE2_4 INT, @IDX_CODE3_4 INT, @IDX_CODE4_4 INT, @IDX_CODE2_5 INT, @IDX_CODE3_5 INT, @IDX_CODE4_5 INT'

 EXEC SP_EXECUTESQL @SQL, @SQL_PARAM, @GOODS_POSITION_IDX, @AREA, @CATE, @TIME_FROM, @TIME_TO, @AGE, @SEX, @IDX_AREA_A_CODE_1, @IDX_AREA_B_CODE_1, @IDX_AREA_C_CODE_1, @IDX_AREA_A_CODE_2, @IDX_AREA_B_CODE_2, @IDX_AREA_C_CODE_2, @IDX_AREA_A_CODE_3, @IDX_AREA_B_CODE_3, @IDX_AREA_C_CODE_3, @IDX_AREA_A_CODE_4, @IDX_AREA_B_CODE_4, @IDX_AREA_C_CODE_4, @IDX_AREA_A_CODE_5, @IDX_AREA_B_CODE_5, @IDX_AREA_C_CODE_5, @FINDCODE_S, @FINDCODE_E, @IDX_CODE2_1, @IDX_CODE3_1, @IDX_CODE4_1, @IDX_CODE2_2, @IDX_CODE3_2, @IDX_CODE4_2, @IDX_CODE2_3, @IDX_CODE3_3, @IDX_CODE4_3, @IDX_CODE2_4, @IDX_CODE3_4, @IDX_CODE4_4, @IDX_CODE2_5, @IDX_CODE3_5, @IDX_CODE4_5

 SET @DBA_END_TIME = DATEDIFF(SS,@DBA_START_TIME,GETDATE()) 
 IF  @DBA_END_TIME >  5 BEGIN
  EXEC STATS.dbo.DBA_EXECUTE_PLAN_ERROR_LOG_INS 3,@DBA_END_TIME,@IPADDR
 END   
END